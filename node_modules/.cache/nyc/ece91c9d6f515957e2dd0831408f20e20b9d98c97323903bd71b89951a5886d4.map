{"version":3,"sources":["errorHandler.js"],"names":["errorHandler","error","req","res","next","status","process","env","NODE","_ENV","json","errors","global","message","headerSent"],"mappings":";;;;;;;AAAA;;;;;;;;;AAUA,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,KAA2B;AAC9CD,EAAAA,GAAG,CAACE,MAAJ,CAAWJ,KAAK,CAACI,MAAN,IAAgB,GAA3B;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAiBC,IAAjB,KAA0B,aAA9B,EAA6C;AAC3C,WAAON,GAAG,CAACO,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEX,KAAK,CAACY,OADR;AAENZ,QAAAA;AAFM;AADM,KAAT,CAAP;AAMD;;AAED,MAAIE,GAAG,CAACW,UAAR,EAAoB;AAClB,WAAOV,IAAI,CAACH,KAAD,CAAX;AACD;;AACDE,EAAAA,GAAG,CAACO,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEX,KAAK,CAACY,OADR;AAENZ,MAAAA,KAAK,EAAE;AAFD;AADD,GAAT;AAMD,CArBD;;eAuBeD,Y","sourceRoot":"/Users/kevin/abarian-backend/server/middlewares","sourcesContent":["/**\n * uncaught errors in server\n * @function ErrorHandler\n * @param  {string} somebody - Somebody's name.\n * @param {object} res\n * @param {object} req\n * @param {function} next\n * @returns {function|object} - Function next() or json object\n */\n\nconst errorHandler = (error, req, res, next) => {\n  res.status(error.status || 500);\n\n  if (process.env.NODE._ENV === 'development') {\n    return res.json({\n      errors: {\n        global: error.message,\n        error\n      }\n    });\n  }\n\n  if (res.headerSent) {\n    return next(error);\n  }\n  res.json({\n    errors: {\n      global: error.message,\n      error: {}\n    }\n  });\n};\n\nexport default errorHandler;\n"]}